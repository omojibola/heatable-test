import Head from 'next/head';
import moment from 'moment';
import { Inter } from '@next/font/google';
import styles from '@/styles/Home.module.css';
import { getStats } from '@/apiActions/statsServices';
import { useState } from 'react';
import Progress from '@/components/Progress/Progress';
import Spinner from '@/components/Spinner/Spinner';

const inter = Inter({ subsets: ['latin'] });

export default function Home({ data }) {
  const [selectedView, setSelectedView] = useState('card');
  const [selectedCharacter, setSelectedCharacter] = useState({});
  const [stats, setStats] = useState([]);
  const [loading, setLoading] = useState(false);

  const displayStats = async (url) => {
    setLoading(true);
    let res = await getStats(url);
    setStats(res);
    setLoading(false);
  };

  console.log(selectedCharacter);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        <div className={styles.top}>
          <p style={{ fontWeight: '200', fontSize: '10px' }}>
            {moment().format('lll')}
          </p>
        </div>
        <div className={styles.logo}>
          <h2 className='logo-text'>HP TEST</h2>
          <p style={{ fontWeight: '200', fontSize: '13px' }}>
            HEATABLE FRONTEND TEST
          </p>
        </div>

        <div className={styles.selection_list}>
          <div
            className={
              selectedView === 'card' ? styles.selected_item : styles.item
            }
            onClick={() => setSelected('card')}
          >
            <p>Card View</p>
          </div>
          <div
            className={
              selectedView === 'list' ? styles.selected_item : styles.item
            }
            onClick={() => setSelected('list')}
          >
            <p>List View</p>
          </div>
        </div>
        <div className={styles.display_flex}>
          <div className={styles.container}>
            <div className={styles.container_list}>
              <div className={styles.container_list_inner}>
                {/* <input placeholder='Search characters' /> */}
                <div className={styles.container_list_inner_header}>
                  <p>Name</p>
                </div>

                <div className={styles.container_list_inner_content}>
                  {data?.results?.map((el) => (
                    <p
                      onClick={() => {
                        setSelectedCharacter(el);
                        displayStats(el?.url);
                      }}
                    >
                      {el?.name}
                    </p>
                  ))}
                </div>
              </div>
            </div>
          </div>

          <div className={styles.stats_container}>
            <h2>{`${selectedCharacter?.name}'s stats`}</h2>
            <div className={styles.stats_container_inner}>
              {loading ? (
                <Spinner />
              ) : (
                stats?.map((el) => (
                  <div className={styles.stats_container_inner_card}>
                    <p style={{ fontSize: '13px' }}>{el?.stat?.name}</p>
                    <p>{`${el?.base_stat}%`}</p>
                    <Progress
                      width={'50%'}
                      bgColor={
                        el?.base_stat > 0 && el?.base_stat < 50
                          ? 'red'
                          : el?.base_stat > 50 && el?.base_stat < 70
                          ? 'orange'
                          : 'green'
                      }
                    />
                  </div>
                ))
              )}
            </div>
          </div>
        </div>

        <div className={styles.line}></div>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  const res = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=151`);
  const data = await res.json();

  return { props: { data } };
}
